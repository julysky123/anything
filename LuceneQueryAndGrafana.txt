1. Lucene Query

  ears-service:"http-web-server"  // ears-service는 http-web-server 가 포함.
   title : "foo bar" AND body:"quick fox"  //title 은 foo bar 포함 body는 quick fox 포함.
   (title : "foo bar" AND body:"quick fox") OR title:fox  //설명생략.
   title:foo -title:bar  //  foo 포함 bar 미포함.
   
   title:foo* // title이 foo로 시작하는 문서 검색
  title:foo*bar // title이 foo로 시작하고 bar로 끝나는 문서 검색
  
   title:te?t //title이 te와 t 사이에 한글자 wildcard인 문서 검색.
     
   주의) *로 시작하는 것을 지원하지 않음.
   
   <fuzzy search>
   roam~ ::: roam 과 유사하게 생긴 단어 검색.
   roam~0.8 ::: 유사도 0.8 이상.
   
   <Proximity matching>
   "foo bar"~4 ::: foo 와 bar 사이에 4단어 내에 있다면 검색.
     (foo bar : 근접 0 // bar foo : 근접 1)
   
   <Range searches>
   mod_date:[20020101 TO 20030101] : 범위 검색. 사전식 정렬됨.
   title:{Aida TO Carmen} : 범위 검색.
   양끝감 포함/배제 가능.  [ ] : 포함  { } : 배제.
   
   <Boosts>
   (title:foo OR title:bar)^1.5 (body:foo OR body:bar)
   가중치가 포함된 항목과 관련성이 더 높은 항목 검색.
   
   <Boolean opeartor>
   AND "+" OR NOT "-"
   두 용어 사이에 operator 가 없으면 OR로 해석.
   OR == ||
   AND == &&
   + : +기호 뒤의 용어가 단일 문서의 필드 어딘가에 있어야함.
    +jakarta lucene : jakarta를 포함해야하고 lucene를 포함할 수도 있는 문서 검색.
   NOT == ! : NOT 뒤의 용어가 포함된 문서를 제외함.
   - : NOT 과 동일.
   
   ( ) 로 먼저 연산할 부분 묶을 수 있다.
   
   <Field Grouping>
   title:(+return +"pink panther")
   : return과 pink panther 가 둘다 포함된 title 을 가진 문서 검색.
   
   <escape>
   + - && || ! ( ) { } [ ] ^ " ~ * ? : \
   해당 character 는 \ 와 함께 사용해서 검색에 활용.

 

ex) +ears-service:"snapshot-server" +MJ_MAIN2   // ears-service 에 snapshot-server가 무조건 포함 하고 문서 어딘가에 MJ_MAIN2가 무조건 포함.
  <==> ears-service:"snapshot-server" AND MJ_MAIN2  //동치.

 

2. Grafana  //https://grafana.com/docs/grafana/latest/dashboards/?pg=docs
•Variables Edit ◦Elastic (ears-server) ◾Refresh : On Time Range Change 가 젤 괜찮은듯.
◾Hide : 빈칸 : 위에서 고를수 있게 하겠다.(변수명 : 고르는칸) Variable 변수로만 쓰겠다. / Label  위에서 고를수 있게하겠다. (변수명 없이 고르는 칸만 있음)
◾Type 을 Query로 하였다면 Query 작성  : ex) {"find":"terms", "field":"process.keyword", "size": 200, "query":"ears-service.keyword:command-server"}



 
•Panel ◦Query . 선택한 DB에 따라 Query 방식이 다름. ears-server는 elastic search 라 Query에 Lucene Query 작성.
◦Metric Count : 검색된 문서 수.
◦Group by : 해당 그룹마다 위의 Metric 집계.
◦Repeat Option 작성시 작성한 변수를 기준으로 해당 패널 반복 출력.

•Bar guage panel  //stat, guage panel 도 동일. ◦Query 탭 : Group by에서 Terms > 그룹하고싶은 항목 작성.
◦Panel 탭 : Display 에서 All values / Fields : Numeric Fields
◦Field 탭 : Display name : $__cell_0   // 해당 변수 사용 규칙 : 밑에 Variable syntax 참고.
◦위와같이 설정하면  group 마다 문서 개수 bar guage 로 표현가능. 
◦HyperLink : ◾위와 같이 설정했을 경우 override -> Count 에서 ${__data.fields[0]} 으로 사용.


•stat panel ◦가장 최근에 어떤 로그가 떴는지 확인하려면 Display : Calculate , Value : Last , Fields : Time 으로 하면 표시 가능.
◦Calculate 와 All values 동시에 띄우는 방법 찾아보는중.

•Graph 는 시간에 대한 그래프.
•Table, Datatable Panel은 별도 설정 없이 Group by에서 Terms > 그룹하고싶은 항목 작성. 만 작성. ◦table field options : https://grafana.com/docs/grafana/latest/panels/visualizations/table/table-field-options/ 
◦Override 탭에서 항목별로 스타일 지정 가능. (숫자 -> guage 등 가능)
◦HyperLink : ◾${__value.text}  : 해당 cell 의 값을 text로 읽음

◦Query 탭에서 Query 추가시 밑에 어느 Query로 가져온 데이터를 보여줄건지 list 생김.

•Log ◦Query 탭 : Metric 을 Logs로 작성.

•Organisations 는 Grafana에 만들어진 Organization 이동 기능.
•Dashboard list 는 Organisations에 포함된 Dashboard list 보여주고 이동 가능.
•Alert : Graph 등의 panel 에서 alert 설정시 Alert panel 에 메세지 등록됨.

 

 

 

Link
•Panel 의 Links : 설정시 Panel 좌측 상단에 링크 연결 표시 생김.
•Field 의 Data links : Panel의 그래프 좌클릭시 링크연결 팝업 생김.  https://grafana.com/docs/grafana/latest/linking/data-links/ 
•kibana url 연결시 시간을 보낼수 없음 (${time 관련} 사용시 양식이 kibana와 다름. 해당 내용은 7.1.2에 추가됨)

 

 

 

 

4. Variable syntax

Panel titles and metric queries can refer to variables using two different syntaxes:

$varname This syntax is easy to read, but it does not allow you to use a variable in the middle of a word. Example: apps.frontend.$server.requests.count
 ${var_name} Use this syntax when you want to interpolate a variable in the middle of an expression.
 ${var_name:<format>} This format gives you more control over how Grafana interpolates values. Refer to Advanced variable format options for more detail on all the formatting types.
 [[varname]] Do not use. Deprecated old syntax, will be removed in a future release.
 Before queries are sent to your data source the query is interpolated, meaning the variable is replaced with its current value. During interpolation, the variable value might be escaped in order to conform to the syntax of the query language and where it is used. For example, a variable used in a regex expression in an InfluxDB or Prometheus query will be regex escaped. Read the data source specific documentation topic for details on value escaping during interpolation.

$__cell_0 : table panel 시 첫번째 열
$__cell_n : table panel 시 n+1번째 열
query tab 에서 group by terms 추가시 첫번째 추가한게 cell_0 , 두번째 추가한게 cell_1, count 등의 metric 값이 cell_마지막.

https://grafana.com/docs/grafana/latest/linking/data-link-variables/
