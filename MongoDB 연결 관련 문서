1. 몽고 DB 는 transaction 을 지원하지 않는다.
  출처 :  https://velog.io/@hanblueblue/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B83-4.-%EB%B2%84%EA%B7%B8-%EC%88%98%EC%A0%95

  spring-data-mongodb를 위한 TransactionManager를 선언하는 방법을 찾아보던 도중, mongoDB에서는 트랜잭션을 지원하지 않는다는 것을 알게 되었다.🤔
  ❗️NOTE
  MongoDB does not support transaction. Only changes applied to the same document are done atomically. 
  A change applied to more than one document will not be applied atomically.

  MongoDB는 트랜잭션을 지원하지 않는다. 동일한 document에서의 갱신만 원자적으로 수행된다. 둘 이상의 document에 적용되는 변경 사항은 원자적으로 적용되지 않는다.
  
  ref. https://docs.jboss.org/hibernate/ogm/4.0/reference/en-US/html_single/#_transactions

  아래는 MongoDB의 공식 도큐먼트에서 발췌한 내용이다.

  In MongoDB, an operation on a single document is atomic. 
  Because you can use embedded documents and arrays to capture relationships between data in a single document structure 
  instead of normalizing across multiple documents and collections, 
  this single-document atomicity obviates the need for multi-document transactions for many practical use cases.
  For situations that require atomicity of reads and writes to multiple documents (in a single or multiple collections),
  MongoDB supports multi-document transactions. With distributed transactions, transactions can be used across multiple operations, collections, databases, documents, and shards.

  MongoDB에서 단일 document에 대한 작업은 원자적이다. 
  내장 document와 배열을 사용해 단일 document 구조에서 데이터 간의 관계의 스냅샷을 찍어둘 수 있기 때문에, 
  단일 document에 대한 원자성은 multi-document 트랜잭션을 수행할 필요가 없다. 
  다중 documents(단일 혹은 멀티 컬렉션에서)에 대한 읽기 및 쓰기의 원자성이 필요한 경우네는 MongoDB가 multi-document 트랜잭션을 지원한다.
  분산 트랜잭션을 사용하면, 트랜잭션은 여러 작업, 컬렉션, 데이터베이스, document, 샤드에 걸쳐서 사용될 수 있다.


